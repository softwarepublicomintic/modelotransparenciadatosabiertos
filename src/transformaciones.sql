ALTER TABLE integrado ADD COLUMN (ciudad TEXT);
ALTER TABLE integrado ADD COLUMN (ano INTEGER);
UPDATE integrado SET ciudad = SUBSTR(nombre_de_la_entidad, 1, LOCATE('-', nombre_de_la_entidad)-2) WHERE 1 = 1;
UPDATE integrado SET ano = SUBSTR(fecha_de_firma_del_contrato, 1, LOCATE('-', fecha_de_firma_del_contrato)-1) WHERE 1 = 1;
CREATE INDEX ciudad_idx ON integrado (ciudad (30));
CREATE INDEX numero_proceso_idx ON integrado (numero_de_proceso (15));
CREATE INDEX id_proceso_idx ON procesos (id_del_proceso (15));
CREATE INDEX objeto_contratacion_idx ON integrado (objeto_a_contratar(200));
CREATE INDEX modalidad_contratacion_idx ON integrado (modalidad_de_contrataci_n(100));
CREATE INDEX entidad_contratista_idx ON integrado (nombre_de_la_entidad(200), nom_raz_social_contratista(200));
DROP VIEW IF EXISTS ciudad_conteo;
CREATE OR REPLACE VIEW ciudad_conteo AS SELECT ciudad, COUNT(*) AS conteo, ROUND(AVG(valor_contrato), 0) AS promedio_contratos FROM integrado WHERE ciudad <> '' GROUP BY ciudad ORDER BY 2 DESC;
DROP VIEW IF EXISTS ciudad_valor_promedio;
CREATE OR REPLACE VIEW ciudad_valor_promedio AS SELECT ciudad, COUNT(*) AS conteo, ROUND(AVG(valor_contrato), 0) AS promedio_contratos FROM integrado WHERE ciudad <> '' GROUP BY ciudad ORDER BY 2 DESC;
DROP VIEW IF EXISTS objeto_conteo;
CREATE OR REPLACE VIEW objeto_conteo AS SELECT objeto_a_contratar, COUNT(*) AS conteo FROM integrado GROUP BY 1 ORDER BY 2 DESC LIMIT 10;
DROP VIEW IF EXISTS modalidad_conteo;
CREATE OR REPLACE VIEW modalidad_conteo AS SELECT modalidad_de_contrataci_n, COUNT(*) AS conteo FROM integrado GROUP BY 1 ORDER BY 2 DESC LIMIT 10;
DROP VIEW IF EXISTS entidad_contratista_conteo;
CREATE OR REPLACE VIEW entidad_contratista_conteo AS SELECT ciudad, nombre_de_la_entidad, nom_raz_social_contratista, COUNT(*) AS conteo, ROUND(AVG(valor_contrato)) AS promedio_contratos FROM integrado WHERE ciudad <> '' GROUP BY 1, 2 ORDER BY 3 DESC;
ALTER TABLE sanciones ADD COLUMN (ciudad varchar(50));
ALTER TABLE sanciones ADD COLUMN (entidad TEXT);
UPDATE sanciones SET ciudad = SUBSTR(nombre_entidad, 1, LOCATE('-', nombre_entidad)-2) WHERE 1 = 1;
UPDATE sanciones SET entidad = SUBSTR(nombre_entidad, LOCATE('-', nombre_entidad)+2, LENGTH(nombre_entidad)) WHERE 1 = 1;
DROP TABLE IF EXISTS creacion_contratista;
CREATE OR REPLACE TABLE creacion_contratista SELECT t1.nombre_entidad, t1.nom_raz_social_contratista AS nombre_contratista, t1.fecha_creacion, t1.ano_creacion FROM ( SELECT nombre_de_la_entidad AS nombre_entidad, fecha_de_firma_del_contrato AS fecha_creacion, ano AS ano_creacion, nom_raz_social_contratista, ROW_NUMBER() OVER (PARTITION BY nombre_de_la_entidad, nom_raz_social_contratista ORDER BY fecha_de_firma_del_contrato) AS conteo FROM integrado WHERE estado_del_proceso = 'Activo' ) t1 WHERE t1.conteo = 1;
DROP TABLE IF EXISTS pregunta2;
CREATE OR REPLACE TABLE pregunta2 SELECT t1.nombre_de_la_entidad as nombre_entidad, COUNT(*) AS activos, t2.nuevos AS nuevos, ROUND(t2.nuevos / COUNT(*), 2)*100 AS proporcion FROM integrado t1 INNER JOIN ( SELECT nombre_entidad, COUNT(*) AS nuevos FROM creacion_contratista WHERE ano_creacion = SUBSTR(DATE_FORMAT(NOW(),'%%Y-%%d-%%d'), 1, 4) GROUP BY nombre_entidad ) t2 ON t1.nombre_de_la_entidad = t2.nombre_entidad WHERE t1.ano = SUBSTR(DATE_FORMAT(NOW(),'%%Y-%%d-%%d'), 1, 4) AND t1.estado_del_proceso = 'Activo' GROUP BY t1.nombre_de_la_entidad, t2.nuevos ORDER BY 4 LIMIT 20;
DROP TABLE IF EXISTS acumulados;
CREATE OR REPLACE TABLE acumulados SELECT *, SUM(t1.valor_total) OVER(ORDER BY valor_total DESC) AS sum_acumulada, SUM(t1.total_contratos) OVER(ORDER BY valor_total DESC) AS conteo_acumulado, SUM(t1.producto_monto) OVER(ORDER BY valor_total DESC) AS prod_monto_acumulado FROM ( SELECT nombre_de_la_entidad, COUNT(*) AS total_contratos, SUM(valor_contrato) AS valor_total, COUNT(*) * SUM(valor_contrato) AS producto_monto FROM integrado GROUP BY nombre_de_la_entidad ) t1;
SET @suma_acumulada_total = (SELECT SUM(valor_total) FROM acumulados);
SET @suma_prod_monto_total = (SELECT SUM(prod_monto_acumulado) FROM acumulados);
DROP TABLE IF EXISTS gini;
CREATE OR REPLACE TABLE gini SELECT nombre_de_la_entidad, SUM(sum_acumulada / @suma_acumulada_total) AS P, SUM(prod_monto_acumulado / @suma_prod_monto_total) as q, SUM(sum_acumulada / @suma_acumulada_total) - SUM(prod_monto_acumulado / @suma_prod_monto_total) AS diferencia, ROUND((SUM(sum_acumulada / @suma_acumulada_total) - SUM(prod_monto_acumulado / @suma_prod_monto_total)) / SUM(sum_acumulada / @suma_acumulada_total), 6) AS Gini FROM acumulados GROUP BY nombre_de_la_entidad ORDER BY Gini DESC LIMIT 20;
DROP TABLE IF EXISTS plurales;
CREATE OR REPLACE TABLE plurales SELECT t1.nombre_entidad, t2.ano, t2.conteo AS contratos_adjudicados, t2.valor_contratos AS valor_adjudicado, COUNT(*) AS  conteo_plurales, COALESCE(COUNT(*) / t2.conteo, 0)*100 AS prop_plurales, COALESCE(t2.valor_contratos / valor_contratos, 0)*100 AS valor_plurales FROM contratos t1 INNER JOIN ( SELECT nombre_entidad, proveedor_adjudicado, SUBSTR(fecha_de_inicio_del_contrato, 1, 4) AS ano, COUNT(*) AS conteo, SUM(valor_del_contrato) AS valor_contratos FROM contratos WHERE SUBSTR(fecha_de_inicio_del_contrato, 1, 4) <> '' AND proveedor_adjudicado  <> '' GROUP BY 1, 2, 3 ) t2 ON t1.nombre_entidad = t2.nombre_entidad AND LOWER(t1.proveedor_adjudicado) = LOWER(t2.proveedor_adjudicado) WHERE LOWER(t1.proveedor_adjudicado) LIKE 'consorcio' OR LOWER(t1.proveedor_adjudicado) LIKE 'union temporal' AND valor_contratos > 0 GROUP BY 1, 2;
DROP TABLE IF EXISTS no_competitivos;
CREATE OR REPLACE TABLE no_competitivos SELECT DISTINCT t1.nombre_entidad, t3.contratos_ejecutados, t3.contratos_especificos, ROUND(t3.contratos_especificos / t3.contratos_ejecutados, 4)*100 AS adjudicaciones_no_competitivas FROM ( SELECT t1.nombre_entidad, t2.proveedores_invitados FROM contratos t1, procesos t2 WHERE LOWER(t1.nombre_entidad) = LOWER(t2.nombre_del_adjudicador) AND LOWER(t1.proveedor_adjudicado) = LOWER(t2.nombre_del_proveedor_adjudicado) AND t2.proveedores_invitados = 1 ) t1 INNER JOIN ( SELECT t1.nombre_entidad, COUNT(*) AS contratos_ejecutados, t2.contratos_especificos FROM contratos t1 INNER JOIN ( SELECT nombre_entidad, COUNT(*) AS contratos_especificos FROM contratos WHERE fecha_de_fin_de_ejecucion IS NOT NULL AND LOWER(descripci_n_del_proceso) NOT LIKE 'interadministrativo' AND LOWER(descripci_n_del_proceso) NOT LIKE 'prestacion de servicios' GROUP BY 1 ) t2 ON t1.nombre_entidad = t2.nombre_entidad WHERE t1.fecha_de_inicio_de_ejecucion IS NOT NULL GROUP BY 1 ) t3 ON t1.nombre_entidad = t3.nombre_entidad;
DROP TABLE IF EXISTS chip_no_secop;
CREATE OR REPLACE TABLE chip_no_secop SELECT LOWER(TRIM(SUBSTR(t2.entidad, 1, t2.final))) AS entidad, t2.departamento FROM (SELECT entidad, CASE WHEN LOCATE('-', entidad) = 0 THEN LENGTH(entidad) ELSE LOCATE('-', entidad)-1 END AS final, departamento FROM chip) t2 LEFT JOIN (SELECT LOWER(TRIM(SUBSTR(nombre_de_la_entidad, LOCATE('-', nombre_de_la_entidad)+1, LENGTH(nombre_de_la_entidad)))) AS entidad, ciudad FROM integrado) t1 ON t1.entidad = t2.entidad AND t1.entidad IS NULL;
DROP TABLE IF EXISTS chip_no_adquisiciones;
CREATE OR REPLACE TABLE  chip_no_adquisiciones SELECT LOWER(TRIM(SUBSTR(t2.entidad, 1, t2.final))) AS entidad, t2.departamento FROM ( SELECT entidad, CASE WHEN LOCATE('-', entidad) = 0 THEN LENGTH(entidad) ELSE LOCATE('-', entidad)-1 END AS final, departamento FROM chip ) t2 LEFT JOIN (SELECT LOWER(entidad) AS entidad, 'BOGOTA' AS departamento FROM adquisiciones) t1 ON t1.entidad = t2.entidad AND t1.entidad IS NULL;